#!/usr/bin/env zsh
0=${(%):-%x}
: ${TIG_SUITE_DIR:=$0:h:h} ${Plugins[TIG_DIR]:=$0:h:h}

# Input/options
local -A Opts
builtin zparseopts -D -E -A Opts --||return 1
local ID=$1 CID=$2 pid_feat rest pdir q qed

# Initialize
ti::util-verify-tigsuite-dir||return 1
ti::util-tigsuite-startup open||return 1

local -a cont=(${(@f)"$(<$TIREGI_FILE)"}) qa
local -a prev=(${(M)cont:#(#s)$PID/$ID: *}) filtered=(${cont:#(#s)$PID/$ID: *})
integer ret update

error-msg(){local -h ret=$1 LINENO=$3 0=$2; timsg -h %U{204}Warning:%f%b error %B{174}$1%f%b occured;}

if (($#ID<3&&$#ID>0));then 
    timsg -h %U{204}Error:%f Too short feature name given, must be of len \>\=3
    return 1
fi

# Open fuzzy finder if no feature ID supplied
if ((!$#ID));then
    ti::util-verify-chooser-app||return 1
    cat $TIREGI_FILE|sed -r -e 's/ Q:"[^"]+"//g'|sort -n|\
    {
        print ${(r:COLUMNS::—:):-—}
        print Below are the configured °features°, click to open.
        print · 1st column is: PID/FeatID » PID is project ID \
                and FeatID is the feature\'s NAME.
        print · remaining columns are the files belonging to \
                their °features°.
        print ${(r:COLUMNS::—:):-—}
        print "${(r:3:: :):-}"PID/FeatID"${(r:25:: :):-}"Files
        print ${(r:COLUMNS::—:):-—}
        cat
    }|{q="$($TIFZF_BIN)";ret+=$?;}
else
    qa=(${(@)${(M)cont:#[^/]##/$ID:*}/ Q:\"[^\"]##\"/})
    q=$qa[1]
    [[ -n $q ]]||{timsg %B{204}Error:%f%b couldn\'t find °{27}feature%f° \
        with {208}ID=%B{41}$ID%b%f, exiting…
        ret+=1
    }
fi

if ((ret));then
    error-msg $ret $0:t $LINENO 
    return ret
fi

if [[ $q == (#b)([^/]##/[^/]##):((([[:space:]]##\"[^\"]##\")##)) ]];then
    pid_feat=$match[1] rest=$match[3]
    qa=("${(@Q)${(@Z+Cn+)${q##$match[1]:[[:space:]]#}}}")
    ((!$#qa))&&{timsg -h %B{204}Error:%f%b couldn\'t read °{27}feature\'s%f° \
                    data, entry is corrupted; return 1;}
    timsg %B{204}NOTICE:%f%b files of °{27}feature%f°: «%B{204}${match[1]##*/}\
%f%b» are:\\n- {39}·${(~j.%f,\n- {39}·.)qa}

    # Look up the project's directory
    for q in $cont; do
        if [[ $q == (#b)$pid_feat:[[:space:]]##Q:\"([^\"]##)\"$rest ]];then
            pdir=$match[1]
            timsg {41}Found dir of %BPID:$pid_feat:h%b: {39}$pdir\\n\
{33}Opening \$EDITOR=%B{27}$EDITOR%f%b…
            qed=${EDITOR:-mcedit}
            command $qed ${qa/(#s)/$pdir/}
        fi
    done
fi

