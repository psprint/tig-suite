#!/usr/bin/env zsh
0="${(%):-%x}"
: ${TIG_SUITE_DIR:=$0:h:h} ${Plugins[TIG_DIR]:=$0:h:h}

# Input/options
local -A Opts
builtin zparseopts -D -E -A Opts -- || return 1
local FROM=$3 ID=$1 CID=$2 
local -aU Q

# Read the commit or queue and read their files 
if [[ $FROM == commit ]];then
    {Q=(${(@0)"$(git diff -z --name-only $CID~..$CID)"});} TIO
    # Try again with $PDIR passed as repo dir
    ((!$#Q))&&\
        {Q=(${(@0)"$(git -C $PDIR diff -z --name-only $CID~..$CID)"});} TIO
elif [[ $FROM == queue ]];then
    {Q=(${(@f)"$(<$TIPID_QUEUE)"});} TIO
fi

# Bootstrap operation
ti::util-verify-cid $FROM $CID||return 1
ti::util-verify-tigsuite-dir||return 1
ti::util-tigsuite-startup new-feature/$FROM Q $FROM-$CID||return 1

local -aU cont=(${(@f)"$(<$TIREGI_FILE)"})
local -aU prev=(${(M)cont:#(#s)$PID/$ID: *}) filtered=(${cont:#(#s)$PID/$ID: *})
integer ret update

if ((!$#Q));then
    [[ $FROM == commit ]]&&timsg -h %U%B{204}Error:%f%b Commit nr.:\
        %B{39}$CID[1,7]%f%b doesn\'t change any files, or is incorrect, exiting…
    [[ $FROM == queue ]]&&timsg -h %U%B{208}Error:%f%b accumulator/queue-file \
        of project %B{39}$PID%f%b is empty. You can add some files by \
        {41}Fsvf%f shortcut in %B{208}TIG interface%f%b.
    return 1
fi
if ((!$#ID));then 
    timsg -h %U{204}Error:%f Please enter the feature NAME in %B{204}TIG\
        interface%f%b, on the prompt that opens
    return 1
fi
if (($#ID<3));then 
    timsg -h %U{204}Error:%f Too short feature name given, must be of len \>\=3
    return 1
fi
if (($#prev>=1));then
        timsg -h %B{204}Warning:%f%b the given new \
            °{27}feature-ID%f°=\"%B{39}${(U)ID}%f%b\" \
            already exists in the registry-file: \
            %B{41}$QREGI_FILE%f%b… %B\\n\\nUpdate it? {204}[Yy/Nn]?
        if read -q -E -e;then
            update=1
            timsg \\n%B{41}Waiting {39}3{41} seconds to stop the edition \
                {204}(Ctrl-C){41}…
            sleep 3
            command mv -f $TIREGI_FILE $TIREGI_FILE\~ TIO
            ret+=$?
            if [[ -n $filtered ]];then
                builtin print -l -- $filtered>>!$TIREGI_FILE
                ret+=$?
            fi
        else
            timsg \\n{204}Warning:%f exiting doing nothing…
            exit 1
        fi
fi

#
# Save feature $ID with files $Q
#

repeat 1 { builtin print -r -- "$PID/$ID:" Q:"${(qqq)PDIR}" \
            "${(qqq@)Q}">>!$TIREGI_FILE; } TIO
ret+=$?

if ((ret==0));then
    timsg \\nFeature %B{41}$ID%f%b succesfully \
        ${${${update:#0}:+updated}:-created} and saved \
        \(to: {39}$QREGI_FILE%f\). \\nIt contains files: \\n- \
            \{39}${(j:%f,\n- {39}:)Q}%f.
    if [[ $FROM == queue ]];then
        builtin print -n -- >! $TIPID_QUEUE TIO
        timsg {204}Notice:{135} the file queue of project \
        %B{41}$PID{135}%b has been cleared (file {39}$TIPID_QUEUE{135} \
has been truncated)
    fi
 else
    timsg -h %U{204}Warning:%f%b error %B{174}$ret%f%b occured \
        when writing to disk, feature %B{41}$ID%f%b could be not saved
fi
