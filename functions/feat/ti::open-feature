#!/usr/bin/env zsh
0="${(%):-%x}"
: ${TIG_SUITE_DIR:=$0:h:h} ${Plugins[TIG_DIR]:=$0:h:h}

# Input/options
local -A Opts
builtin zparseopts -D -E -A Opts -- -get-files-only||return 1
local ID=$1 CID=$2 pid_feat rest pdir q qed

# Initialize
util/ti::verify-cid "$FROM" $CID||return 1
util/ti::verify-tigsuite-dir||return 1
((!$+Opts[--get-files-only]))&&{util/ti::tigsuite-startup open "" "<empty>"|| \
    return 1;}

local -a cont=(${(@f)"$(<$TINFO)"}) qa
local -a prev=(${(M)cont:#(#s)$PID/$ID: *}) filtered=(${cont:#(#s)$PID/$ID: *})
integer ret update

error-msg(){local -h ret=$1 LINENO=$3 0=$2; tigmsg -h %U{204}Warning:%f%b error %B{174}$1%f%b occured;}

if (($#ID<3&&$#ID>0));then 
    tigmsg -h %U{204}Error:%f Too short feature name given, must be of len \>\=3
    return 1
fi

# Open fuzzy finder if no feature ID supplied
if ((!$#ID));then
    util/ti::verify-chooser-app||return 1
    {
        print ${(r:COLUMNS::–:):-–}
        print Below are the configured °features°, click to open.
        print 1st column is: PID/FeatID » PID is project ID \
                and FeatID is the feature\'s NAME.
        print ${(r:COLUMNS::–:):-–}
        print "${(r:3:: :):-}"PID/FeatID"${(r:25:: :):-}"Files
        print ${(r:COLUMNS::–:):-–}
        printf ·%s\\n ${(on)${(@f)"$(<$TINFO)"}/ Q:\"[^\"]##\"}
    }|{q="${$($TICHOOSE_APP ${${(M)TICHOOSE_APP:#fzf}:+--tac})#·}";ret+=$?;}
else
    qa=(${(@)${(M)cont:#[^/]##/$ID:*}/ Q:\"[^\"]##\"/})
    q=$qa[1]
    [[ -n $q ]]||{tigmsg %B{204}Error:%f%b couldn\'t find °{27}feature%f° \
        with {208}ID=%B{41}$ID%b%f, exiting…
        ret+=1
    }
fi

if ((ret));then
    error-msg $ret $0:t $LINENO 
    return ret
fi

if [[ $q == (#b)([^/]##/[^/]##):((([[:space:]]##\"[^\"]##\")##)) ]];then
    pid_feat=$match[1] rest=$match[3] ID=$match[1]:t
    qa=("${(@Q)${(@Z+Cn+)${q##$match[1]:[[:space:]]#}}}")
    ((!$#qa))&&{tigmsg -h %B{204}Error:%f%b couldn\'t read °{27}feature%f°\'s \
                    data, entry is corrupted; return 1;}
    tigmsg %B{204}NOTICE:%f%b files of °{27}feature%f°{135} ID=«%B{204}${match[1]##*/}\
%f%b» are:\\n- {39}·${(~j.%f,\n- {39}·.)qa}

    # Look up the project's directory
    for q in $cont; do
        if [[ $q == (#b)$pid_feat:[[:space:]]##Q:\"([^\"]##)\"$rest ]];then
            pdir=$match[1]
            if (($+Opts[--get-files-only])); then
                reply=($qa) REPLY=$ID$'\0'$pdir
                [[ -d $pdir ]]
                return $?
            else
                tigmsg {41}Found dir of %BPID:$pid_feat:h%b: {39}$pdir\\n\
{33}Opening \$EDITOR=%B{27}$EDITOR%f%b…
                util/ti::get-editor||return 1
                (
                    builtin cd -q -- $pdir
                    command "$REPLY" $qa
                )
            fi
            break
        fi
    done
fi

