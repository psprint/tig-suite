#!/usr/bin/env zsh
# -*- mode: sh; sh-indentation: 4; indent-tabs-mode: nil; sh-basic-offset: 4; -*
# Copyright (c) 2023 Sebastian Gniazdowski

# Possibly fix $0 with a new trick – use of a %x prompt expansion
0="${${(M)${0::=${(%):-%x}}:#/*}:-$PWD/$0}"
: ${TIG_SUITE_DIR:=$0:h:h} ${Plugins[TIG_DIR]:=$0:h:h}

local which=$1 met=$3 obj=$2
local -aU qa

# Initialize
util/ti::verify-tigsuite-dir||return 1
util/ti::verify-cid "$which" $obj||return 1
util/ti::tigsuite-startup rename "" $which-$obj||return 1

preamble-and-files() {
        local tpe=$1 cid=$2 cmd txt
        print ${(r:COLUMNS::—:):-—}
        print -n Showing files
        if [[ $tpe == commit ]];then
            print \ \(current PWD project: $PID\) in the commit: ·$cid[1,7]
            cmd=enc
            txt="in commit ·$cid[1,7]"
            {qa=(${(@f)"$(command git diff --name-only $cid~..$cid)"});} TIO
        fi
        if [[ $tpe == queue ]];then
            print gathered for current PWD project\ \($PID\) in \
                queue file:\\n·$TIPID_QUEUE
            txt=accumulator/queue-file
            cmd=enq
            {qa=(${(@f)"$(<$TIPID_QUEUE)"});} TIO
        fi
        print To convert it into a °feature° object press \"$cmd\" \
            in TIG interface
        print ${(r:COLUMNS::–:):-–}
        print \\nFiles in the $txt:\\n
        (($#qa))||qa=("Error: no data obtained")
        printf ·%s\\n $qa
}

if [[ $which == queue ]];then
    if [[ ! -s $TIPID_QUEUE ]];then
        tigmsg -h %B{204}Notice:%f%b queue is empty, nothing to display…
        return 1
    fi
    local -a arg=($which)
fi
if [[ $which == commit ]];then
    local -a arg=($which $obj)
fi

local qo=${${:-"$(preamble-and-files $arg|$TICHOOSE_APP)"}#·}
integer ec
while [[ -f $qo && $ec -eq 0 ]];do
    command cat $qo|{qo=${${:-"$($TICHOOSE_APP)"}#·};ec=$?;}
done
 
 # vim:ft=zsh:tw=80:sw=4:sts=4:et:foldmarker=[[[,]]]
